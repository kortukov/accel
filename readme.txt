3 скрипта для разметки данных

Во всех скриптах чтобы они заработали на другом компьютере достаточно прописать пути к папкам с файлами. В моём случае сами скрипты лежали в папке /home/evgeny/lab/task, .ann и video_data.mat лежали в соседних папках ann и clean_data. Перед тем как запускать скрипты надо подчистить .ann файлы руками. Какие и как - смотри в конце readme.

hustle_labels.m добавляет к clean_data файлам вектор с hustle_timing с кадрами метаний с помощью txt файлов из папки hustle_01. Время метаний получается если написать timing[hustle_timing]. За кадр с метанием взят первый, отстоящий меньше чем на 0.05 секунды. Между кадрами там 0.033 секунды, но я взял такое число. Можно и чуть поменьше, хотя мне кажется это не принципиально для разметки.

synchro.m синхронизирует стимулы и реакции с ээг и с камеры. А именно, добавляет к clean_data файлам векторы st_timing и rs_timing длины (число эпох) c помощью ann файлов из папки ann. Алгоритм синхронизации взят простой: проверяем, совпадает ли количество стимулов, если нет - заносим файл в corrupt_files.mat. Если совпадает, считаем вектор разницы между стимулами, прибавляем его к стимулам и реакциям с ээг. Получаем стимулы и реакции во времени рассчитанном камерой. 
Попутно этот скрипт проверяет отсутсвтие реакций и заносит в video_data файл вектор no_reaction_epochs с номерами эпох которые анализировать не надо.

testing1.m это второй вариант алгоритма синхронизации. Он ещё не дописан. Он падает если отсутствует реакция(надо допилить внутрь кусочек, это проверяющий, из synchro.m). Идея алгоритма - рассчитываем расстояние между всеми стимулами на ээг, умножаем на (30/1000) - отношение частот дискретизации, и получаем расстояние между стимулами на видео, в кадрах. Далее надо с помощью первого стимула с камеры и этих расстояний получаем вектор стимулов на видео. То же самое с реакциями. Этот алгоритм должен быть абсолютно устойчив там где на камере выпадали стимулы, НО пока он работает неправильно. Почему-то копится ошибка и последние пересчитаные стимулы съезжают. Видимо, что-то неправильно с формулой или с округлениями.

final_labels.m собирает итоговый вектор разметки по эпохам для всех размеченных файлов, собирает он его из трёх векторов - st_timing, rs_timing, hustle_timing
В нём есть строчка hustle_timing = transpose(timing(hustle_timing)); Прошу меня за неё простить, это надо было сделать в файле hustle_labels :)

Скриптик file_check.m надо использовать, чтобы проверить файлы которые в процессе работы synchro.m попадают в corrupt_files.mat. Ставим в начале цикла например от for i = 5:5 чтобы посмотреть пятый файл. Далее смотрим st_times_eeg и st_times_vid, сравниваем. Пытаемся понять почему отличаются.
Я начну, найденные косяки в .ann файлах буду записывать внизу.
Нашёл несколько файлов в которых на видео пара лишних стимулов. Если пробежать глазом st_times_vid иногда видно, где лишние и можно просто руками затереть в stim_timecourse и сразу засейвить его в video_data.
Кроме указанных внизу двух .ann файлов, остальные 48 случаев действительно с ошибками в количестве стимулов на видео. ЭЭГ на всех запипсано нормально, так что исправив все .ann указанные ниже, можно считать данные с ЭЭГ корректными.
Значит следующий шаг - попытаться разобраться с testing1.m(вторым алгоритмом синхронизации) и сделать так чтобы он не накапливал ошибку.



synchro.m в процессе работы будет ругаться при чтении .ann файлов. Также corrupt_files.mat содержит файлы, при анализе которых возникли ошибки и некоторые из них из-за ошибок в .ann файлах. Их надо исправить предварительно руками. Вот такие ошибки я нашёл, возможно есть ещё:
krivosheeva_1 после конца мусор
manuhina_1 после конца мусор
popova_7 нет последнего 255
shilenina_0 после конца мусор
tarasova_6 после конца мусор

Две ошибки для corrupt_files:
gorkova_2 в начале девять лишних строчек и нолик
vaizhehovskaya_2 в начале судя по всему пропущены один стимул и одна реакция



Большая часть файлов в corrupt_files кривые из-за пропущенных стимулов на видео. Но на некоторых видео есть лишние стимулы, а на некотрых чёто совсем не то распознано. Пример - kashkarev_1, там на видео 370 стимулов, в ээг 100 или shetinina_4, voronova_6 то же самое.

